/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.60
 * Generated at: 2022-12-09 07:19:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.sub;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class sub2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/D:/hth/pro04/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/pro04/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/hth/pro04/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/pro04/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1668995163779L));
    _jspx_dependants.put("jar:file:/D:/hth/pro04/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/pro04/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Document</title>\r\n");
      out.write("    <link href=\"https://www.ottogi.co.kr/css/style.css\" type=\"text/css\" rel=\"stylesheet\" media=\"screen,projection\">\r\n");
      out.write("    <link href=\"https://www.ottogi.co.kr/css/materialize.css\" type=\"text/css\" rel=\"stylesheet\" media=\"screen,projection\">\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../include/head.jsp", out, false);
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../include/header.jsp", out, false);
      out.write("\r\n");
      out.write("    <div class=\"section about\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"tit_content\">\r\n");
      out.write("                <h2 class=\"header center titbul \">최고의 맛을 향한 열정</h2>\r\n");
      out.write("                <p>오뚜기 전 임직원들은 '보다 좋은 품질, 보다 높은 영양, 보다 앞선 식품'으로 인류 식생활 향상에 이바지하기 위해 맡은 바 업무에 최선을 다하고 있습니다. <br>영업, 생산, 연구, 관리 등 모든 부서에서 스스로에게 주어진 업무를 빈틈없이 처리하고 있는 것은 물론 밝고 명랑한 직장 분위기를 만들기 위해 노력하고 있습니다. <br>이러한 오뚜기의 노력들이 바로 최고 품질, 최고의 맛으로 승화되는 것입니다.</p>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"container fix ottogitop mt50\">\r\n");
      out.write("                <div class=\"left\">\r\n");
      out.write("                    <dl>\r\n");
      out.write("                        <dt>오뚜기는</dt>\r\n");
      out.write("                        <dd>보다 좋은 품질<br>보다 높은 영양<br>보다 앞선 식품을 위해<br>최선을 다하고 있습니다 </dd><!-- 2017-06-04 오타수정 -->\r\n");
      out.write("                    </dl>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"right \">\r\n");
      out.write("                    <dl>\r\n");
      out.write("                        <dt>최고의 맛을 향한 열정</dt>\r\n");
      out.write("                        <dd>모든 부서에서 최고 품질,최고 맛을<br>승화시키기 위해<br>보다 앞선 식품을 위해<br>최선을 다하고 있습니다 </dd><!-- 2017-06-04 오타수정 -->\r\n");
      out.write("                    </dl>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"tit_content mt50\">\r\n");
      out.write("                <h2 class=\"header center titbul \">맛있는 식품은 신선한 원료에서</h2>\r\n");
      out.write("                <p>신선한 육류와 야채를 사용한 <strong>'오뚜기 3분 요리'</strong>는 바쁜 현대인들에게 충분한 영양을 공급합니다.<br>정선된 원료로 만든 <strong>'오뚜기 마요네스'와 '드레싱'</strong>은 신선한 야채를 다양하게 즐길 수 있도록 해줍니다.<br>갖가지 향신료로 만든 <strong>'오뚜기 카레'</strong>는 더욱 부드럽고 향긋한 카레 특유의 풍미를 느낄 수 있습니다.<br>과육의 원형이 살아있는 <strong>'오뚜기 프리저브형 쨈'</strong>은 딸기, 포도, 블루베리 등의 신선한 과실로 만듭니다.<br>엄선된 쌀을 깨끗하게 씻어 포장한 <strong>'씻어나온 맛있는 오뚜기쌀'</strong>은 더 씻을 필요 없이 물만 부어 한번에 밥을 지을 수 있기 때문에 매우 간편합니다.<br><strong>'맛있는 오뚜기밥'</strong>은 갓 지은 맛있는 밥을 무균 포장한 제품으로 간편한 식생활을 추구하는 현대인들에게 필수적인 제품입니다.</p>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"tit_content mt50\">\r\n");
      out.write("                <h2 class=\"header center titbul \">우수한 품질은 좋은 시설에서</h2>\r\n");
      out.write("                <p>우리 회사는 카레, 스프, 케챂, 마요네스 등 1등 제품이 많습니다. <br>이처럼 많은 제품들이 오랫동안 정상을 지켜온 비결은 고객들의 욕구를 충실히 반영한 좋은 품질의 제품을 공급해왔기 때문입니다.<br>우리 회사의 모든 생산라인은 자동화된 첨단설비, 위생적인 환경을 구축하고 있습니다.<br>이것이 바로 오뚜기의 저력이고 1등 제품의 힘입니다. 그리고 발전하는 21세기 오뚜기의 비전입니다. <br>이런 오뚜기의 노력이 최고 품질, 최고의 맛으로 승화되는 것입니다.</p>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"container fix ottogitop about2 mt50 mb150\">\r\n");
      out.write("                <div class=\"left\">\r\n");
      out.write("                    <dl>\r\n");
      out.write("                        <dt>신선한 원료</dt>\r\n");
      out.write("                        <dd>신선한 육류와 야채를 사용한 <br>'오뚜기 3분 요리'는 <br>바쁜 현대인들에게<br>충분한 영양을 공급합니다.</dd>\r\n");
      out.write("                    </dl>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"right \">\r\n");
      out.write("                    <dl>\r\n");
      out.write("                        <dt>우수한 시설</dt>\r\n");
      out.write("                        <dd>생산라인은 자동화된 첨단설비, <br>위생적인 환경을<br>구축하고 있습니다.</dd>\r\n");
      out.write("                    </dl>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../include/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
