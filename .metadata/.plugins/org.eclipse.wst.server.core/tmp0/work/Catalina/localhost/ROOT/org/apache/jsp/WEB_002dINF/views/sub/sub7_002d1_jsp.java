/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.60
 * Generated at: 2022-12-09 08:08:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.sub;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class sub7_002d1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/D:/hth/pro04/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/pro04/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/hth/pro04/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/pro04/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1668995163779L));
    _jspx_dependants.put("jar:file:/D:/hth/pro04/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/pro04/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Document</title>\r\n");
      out.write("<link href=\"https://www.ottogi.co.kr/css/style.css\" type=\"text/css\" rel=\"stylesheet\" media=\"screen,projection\">\r\n");
      out.write("<link href=\"https://www.ottogi.co.kr/css/materialize.css\" type=\"text/css\" rel=\"stylesheet\" media=\"screen,projection\">\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../include/head.jsp", out, false);
      out.write("    \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../include/header.jsp", out, false);
      out.write("\r\n");
      out.write("    <div class=\"section\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"tit_content\">\r\n");
      out.write("                <h2 class=\"header center titbul \">진라면 매운맛</h2>\r\n");
      out.write("                <p style=\"text-align:center;\">라면류 &gt; 진라면 매운맛</p>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"container fix recipe mt50\">\r\n");
      out.write("                <div class=\"left\">\r\n");
      out.write("                    <p><img src=\"	https://www.ottogi.co.kr/pds/product/2020-08-10_1001111506.png\" alt=\"진라면 매운맛\"></p>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"right\">\r\n");
      out.write("                    <table class=\"bordered vtbl recipeTbl goodsTbl\">\r\n");
      out.write("                        <caption>제품정보</caption>\r\n");
      out.write("                        <colgroup>\r\n");
      out.write("                            <col style=\"width:20%;\">\r\n");
      out.write("                            <col>\r\n");
      out.write("                        </colgroup>\r\n");
      out.write("                        <tbody>\r\n");
      out.write("                            <tr class=\"first\">\r\n");
      out.write("                                <th scope=\"row\">용량</th>\r\n");
      out.write("                                <td>\r\n");
      out.write("                                    <p>120g, 600g(120g×5), 2,400g(120g×20)</p>\r\n");
      out.write("                                </td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <th scope=\"row\">제품특징</th>\r\n");
      out.write("                                <td>쫄깃하고 부드러운 면발에 진한국물과 얼큰한 양념이 잘 조화된 맛입니다.</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                            <tr class=\"last\">\r\n");
      out.write("                                <th scope=\"row\">원재료 및 <br>원산지</th>\r\n");
      out.write("                                <td>면:소맥분(밀:미국산,호주산),변성전분,팜유(말레이시아산),감자전분(외국산:덴마크,프랑스,독일 등),글루텐,정제소금,마늘시즈닝,난각분말,유화유지,면류첨가알칼리제(산도조절제),이스트엑기스,육수추출농축액,녹차풍미유,비타민B2<br><br>스프류:정제소금,설탕,포도당,복합양념분말,숙성마늘맛분,간장분말,볶음양념분말,육수맛분말,마늘농축조미분,고추맛베이스,로스팅맛분말,쇠고기육수분말,조미육수분말,참맛양념분말,발효복합분,진한감칠맛분,후추분말,칠리맛분말,고춧가루,감칠맛분말,참맛버섯양념분말,버섯야채조미분말,오뚜기참치간장분말,감칠맛베이스,로스팅조미분말,맛베이스,향미증진제,볶음마늘분,육수맛조미분,육수추출농축분말,참맛효모조미분말,숙성양념분말,칠리추출물,구아검,칠리혼합추출물,산도조절제,고추농축소스,조미쇠고기맛후레이크,건당근,건청경채,건파,건표고버섯,건고추입자<br><br>밀,대두,계란,쇠고기,돼지고기,닭고기,조개류(굴,홍합 포함) 함유<br><br>우유,메밀,토마토,오징어,새우,게,고등어,땅콩 혼입가능</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                        </tbody>\r\n");
      out.write("                    </table>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"container nutrient pc\">\r\n");
      out.write("                <h3>영양성분</h3>\r\n");
      out.write("                <table class=\"bordered vtbl nutrientTbl\">\r\n");
      out.write("                        <caption>영양성분</caption>\r\n");
      out.write("                        <colgroup>\r\n");
      out.write("                            <col>\r\n");
      out.write("                            <col style=\"width:9%;\">\r\n");
      out.write("                            <col style=\"width:9%;\">\r\n");
      out.write("                            <col style=\"width:9%;\">\r\n");
      out.write("                            <col style=\"width:9%;\">\r\n");
      out.write("                            <col style=\"width:9%;\">\r\n");
      out.write("                            <col style=\"width:9%;\">\r\n");
      out.write("                            <col style=\"width:9%;\">\r\n");
      out.write("                            <col style=\"width:9%;\">\r\n");
      out.write("                            <col style=\"width:9%;\">\r\n");
      out.write("                        </colgroup>\r\n");
      out.write("                        <tbody>\r\n");
      out.write("                            <tr class=\"first\">\r\n");
      out.write("                                <th scope=\"row\">영양성분표</th>\r\n");
      out.write("                                <th class=\"th2\" scope=\"col\"><strong>열량 </strong></th>\r\n");
      out.write("                                <th class=\"th2\" scope=\"col\"><strong>나트륨 </strong></th>\r\n");
      out.write("                                <th class=\"th2\" scope=\"col\"><strong>탄수화물 </strong></th>\r\n");
      out.write("                                <th class=\"th2\" scope=\"col\"><strong>당류 </strong></th>\r\n");
      out.write("                                <th class=\"th2\" scope=\"col\"><strong>지방 </strong></th>\r\n");
      out.write("                                <th class=\"th2\" scope=\"col\"><strong>트랜스지방 </strong></th>\r\n");
      out.write("                                <th class=\"th2\" scope=\"col\"><strong>포화지방 </strong></th>\r\n");
      out.write("                                <th class=\"th2\" scope=\"col\"><strong>콜레스테롤 </strong></th>\r\n");
      out.write("                                <th class=\"th2\" scope=\"col\"><strong>단백질 </strong></th>																								\r\n");
      out.write("                            </tr>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <th scope=\"row\">1회 제공량 120g 당 함량</th>\r\n");
      out.write("                                <td>500kcal</td>\r\n");
      out.write("                                <td>1,760mg</td>\r\n");
      out.write("                                <td>77g</td>\r\n");
      out.write("                                <td>4.6g</td>\r\n");
      out.write("                                <td>16g</td>\r\n");
      out.write("                                <td>0g</td>\r\n");
      out.write("                                <td>8g</td>\r\n");
      out.write("                                <td>0mg</td>\r\n");
      out.write("                                <td>12g</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <th scope=\"row\">영양성분 기준치(%)</th>\r\n");
      out.write("                                <td></td>\r\n");
      out.write("                                <td>88%</td>\r\n");
      out.write("                                <td>24%</td>\r\n");
      out.write("                                <td>4.6%</td>\r\n");
      out.write("                                <td>30%</td>\r\n");
      out.write("                                <td>%</td>\r\n");
      out.write("                                <td>53%</td>\r\n");
      out.write("                                <td>0%</td>									\r\n");
      out.write("                                <td>22%</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                        </tbody>\r\n");
      out.write("                    </table>\r\n");
      out.write("                    <p class=\"fs14 fc666\">% 영양성분 기준치 :  1일 영양성분 기준치에 대한 비율</p>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"container nutrient mobile\">\r\n");
      out.write("                <h3>영양성분</h3>\r\n");
      out.write("                <table class=\"bordered htbl nutrientTbl\">\r\n");
      out.write("                    <caption>영양성분</caption>\r\n");
      out.write("                    <colgroup>\r\n");
      out.write("                        <col>\r\n");
      out.write("                        <col style=\"width:30%;\">\r\n");
      out.write("                        <col style=\"width:35%;\">\r\n");
      out.write("                        <col style=\"width:35%;\">\r\n");
      out.write("                    </colgroup>\r\n");
      out.write("                    <thead>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <th scope=\"row\">영양성분표</th>\r\n");
      out.write("                            <th scope=\"row\">1회 제공량 120g 당 함량</th>\r\n");
      out.write("                            <th scope=\"row\">영양성분 기준치(%)</th>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                    </thead>\r\n");
      out.write("                    <tbody>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <th class=\"th2\" scope=\"col\"><strong>열량 </strong></th>\r\n");
      out.write("                            <td>500kcal</td>\r\n");
      out.write("                            <td> </td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <th class=\"th2\" scope=\"col\"><strong>탄수화물 </strong></th>\r\n");
      out.write("                            <td>77g</td>\r\n");
      out.write("                            <td>24%</td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <th class=\"th2\" scope=\"col\"><strong>당류 </strong></th>\r\n");
      out.write("                            <td>4.6g </td>\r\n");
      out.write("                            <td>4.6% </td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <th class=\"th2\" scope=\"col\"><strong>단백질 </strong></th>\r\n");
      out.write("                            <td>12g </td>\r\n");
      out.write("                            <td>22%</td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <th class=\"th2\" scope=\"col\"><strong>지방 </strong></th>\r\n");
      out.write("                            <td>16g </td>\r\n");
      out.write("                            <td>30%</td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <th class=\"th2\" scope=\"col\"><strong>포화지방 </strong></th>\r\n");
      out.write("                            <td>8g </td>\r\n");
      out.write("                            <td>53%</td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <th class=\"th2\" scope=\"col\"><strong>트랜스지방 </strong></th>\r\n");
      out.write("                            <td>0g </td>\r\n");
      out.write("                            <td>%</td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <th class=\"th2\" scope=\"col\"><strong>콜레스테롤 </strong></th>\r\n");
      out.write("                            <td>0mg </td>\r\n");
      out.write("                            <td>0%</td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <th class=\"th2\" scope=\"col\"><strong>나트륨 </strong></th>\r\n");
      out.write("                            <td>1,760mg </td>\r\n");
      out.write("                            <td>88%</td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                    </tbody>\r\n");
      out.write("                </table>\r\n");
      out.write("                <p class=\"fs14 fc666\">% 영양성분 기준치 :  1일 영양성분 기준치에 대한 비율</p>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../include/footer.jsp", out, false);
      out.write("   \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
